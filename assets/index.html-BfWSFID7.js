import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,w as l,e as t,r as e,o as h,b as k}from"./app-BUJ2iQsf.js";const p={},d=t(`<h2 id="🔗-链接" tabindex="-1"><a class="header-anchor" href="#🔗-链接"><span>🔗 链接</span></a></h2><p><a href="https://leetcode-cn.com/problems/remove-nth-node-from-end-of-list/" target="_blank" rel="noopener noreferrer">LeetCode-19</a> 该题和 <a href="https://leetcode-cn.com/problems/kth-node-from-end-of-list-lcci/" target="_blank" rel="noopener noreferrer">面试题 02.02</a> 类似</p><br><h2 id="📋-代码1" tabindex="-1"><a class="header-anchor" href="#📋-代码1"><span>📋 代码1</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#393a34;--shiki-dark:#e1e4e8;--shiki-light-bg:#ffffff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes vitesse-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> * public class ListNode {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> *     int val;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> *     ListNode next;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> *     ListNode(int x) { val = x; }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> * }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#B392F0;"> Solution</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;"> ListNode </span><span style="--shiki-light:#59873A;--shiki-dark:#B392F0;">removeNthFromEnd</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">ListNode </span><span style="--shiki-light:#B07D48;--shiki-dark:#FFAB70;">head</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#B07D48;--shiki-dark:#FFAB70;"> n</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">head </span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#1E754F;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> ||</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> head</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> ==</span><span style="--shiki-light:#1E754F;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;"> return</span><span style="--shiki-light:#1E754F;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">	</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		ListNode</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> dummy</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#59873A;--shiki-dark:#B392F0;"> ListNode</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#2F798A;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">		dummy</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;"> head</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		ListNode</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> fast</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;"> dummy</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		ListNode</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> slow</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;"> dummy</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">		while</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#79B8FF;"> 0</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">			fast </span><span style="--shiki-light:#999999;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> fast</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">		while</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">fast</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> !=</span><span style="--shiki-light:#1E754F;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">			fast </span><span style="--shiki-light:#999999;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> fast</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">			slow </span><span style="--shiki-light:#999999;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> slow</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">		slow</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> slow</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">		return</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> dummy</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="💡-思路" tabindex="-1"><a class="header-anchor" href="#💡-思路"><span>💡 思路</span></a></h2><p>这种题有一个固定的“套路”，因为要获取目标节点的前一个节点，这里创建哑节点，令它的后继节点为head。 之后，fast/slow都指向它(也可以指向head，但这样必须引入一个计数器，判断要删除的是否是头结点。)。先把fast右移n位；之后，再同时移动fast/slow，直到fast指向最后一个节点。此时，fast指到了最后一个节点，slow指到了目标节点的前一个节点（而不是目标节点）。 之后使用slow.next = slow.next.next即可删除目标节点。最后，使用dummy.next返回需要的节点头即可。 <br> 而对于<a href="https://leetcode-cn.com/problems/kth-node-from-end-of-list-lcci/" target="_blank" rel="noopener noreferrer">面试题 02.02</a> ，需要返回倒数第k个节点的值，不需要得到目标节点的前驱节点，因此不需要设置哑节点。首先，fast/slow都指向head，之后先移动fast n次，再同时移动fast/slow。直到fast指向null。此时，slow就是目标节点，返回其值即可。代码如下：</p><h2 id="📋-代码2" tabindex="-1"><a class="header-anchor" href="#📋-代码2"><span>📋 代码2</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" data-title="java" style="--shiki-light:#393a34;--shiki-dark:#e1e4e8;--shiki-light-bg:#ffffff;--shiki-dark-bg:#24292e;"><pre class="shiki shiki-themes vitesse-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> * public class ListNode {</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> *     int val;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> *     ListNode next;</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> *     ListNode(int x) { val = x; }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> * }</span></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#2E8F82;--shiki-dark:#B392F0;"> Solution</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#59873A;--shiki-dark:#B392F0;"> kthToLast</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">ListNode </span><span style="--shiki-light:#B07D48;--shiki-dark:#FFAB70;">head</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> int</span><span style="--shiki-light:#B07D48;--shiki-dark:#FFAB70;"> k</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		ListNode</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> slow</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;"> head</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		ListNode</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> fast</span><span style="--shiki-light:#999999;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;"> head</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">		while</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">k</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">--</span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#2F798A;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">			fast </span><span style="--shiki-light:#999999;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> fast</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">		while</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">fast </span><span style="--shiki-light:#AB5959;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#1E754F;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">			fast </span><span style="--shiki-light:#999999;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> fast</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">			slow </span><span style="--shiki-light:#999999;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> slow</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">next</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#393A34;--shiki-dark:#E1E4E8;">		</span></span>
<span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#F97583;">		return</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;"> slow</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#B07D48;--shiki-dark:#E1E4E8;">val</span><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#E1E4E8;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,11);function r(E,g){const s=e("center");return h(),a("div",null,[d,n(s,null,{default:l(()=>[k("End")]),_:1})])}const o=i(p,[["render",r],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/40algo/30listnode/lc19/","title":"LeetCode-19 删除倒数第N个节点","lang":"zh-CN","frontmatter":{"title":"LeetCode-19 删除倒数第N个节点","date":"2020-02-22T22:26:28.000Z","permalink":"/40algo/30listnode/lc19/","order":1,"icon":"leetcode","description":"🔗 链接 LeetCode-19 该题和 面试题 02.02 类似 📋 代码1 💡 思路 这种题有一个固定的“套路”，因为要获取目标节点的前一个节点，这里创建哑节点，令它的后继节点为head。 之后，fast/slow都指向它(也可以指向head，但这样必须引入一个计数器，判断要删除的是否是头结点。)。先把fast右移n位；之后，再同时移动fas...","head":[["meta",{"property":"og:url","content":"https://i.iyes.life/40algo/30listnode/lc19/"}],["meta",{"property":"og:site_name","content":"Mr.He"}],["meta",{"property":"og:title","content":"LeetCode-19 删除倒数第N个节点"}],["meta",{"property":"og:description","content":"🔗 链接 LeetCode-19 该题和 面试题 02.02 类似 📋 代码1 💡 思路 这种题有一个固定的“套路”，因为要获取目标节点的前一个节点，这里创建哑节点，令它的后继节点为head。 之后，fast/slow都指向它(也可以指向head，但这样必须引入一个计数器，判断要删除的是否是头结点。)。先把fast右移n位；之后，再同时移动fas..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-01-01T16:22:14.000Z"}],["meta",{"property":"article:author","content":"Mr.He"}],["meta",{"property":"article:published_time","content":"2020-02-22T22:26:28.000Z"}],["meta",{"property":"article:modified_time","content":"2023-01-01T16:22:14.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"LeetCode-19 删除倒数第N个节点\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-02-22T22:26:28.000Z\\",\\"dateModified\\":\\"2023-01-01T16:22:14.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.He\\",\\"url\\":\\"https://i.iyes.life\\"}]}"]]},"headers":[{"level":2,"title":"🔗 链接","slug":"🔗-链接","link":"#🔗-链接","children":[]},{"level":2,"title":"📋 代码1","slug":"📋-代码1","link":"#📋-代码1","children":[]},{"level":2,"title":"💡 思路","slug":"💡-思路","link":"#💡-思路","children":[]},{"level":2,"title":"📋 代码2","slug":"📋-代码2","link":"#📋-代码2","children":[]}],"git":{"createdTime":1664722755000,"updatedTime":1672590134000,"contributors":[{"name":"jayxiaohe","email":"495302067@qq.com","commits":1}]},"readingTime":{"minutes":1.5,"words":451},"filePathRelative":"40algo/30listnode/01.leetcode19.md","localizedDate":"2020年2月23日","autoDesc":true}');export{o as comp,v as data};
